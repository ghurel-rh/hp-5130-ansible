- name: Ensure 'rm_dest' variable is set
  assert:
    that: rm_dest is defined

- name: Ensure 'resource' is defined
  assert:
    that: resource is defined

- name: Ensure the 'collection_org' is set
  assert:
    that: collection_org is defined

- name: Ensure the 'collection_name' is set
  assert:
    that: collection_name is defined

- name: Default 'network_os' to 'collection_name' if not set
  set_fact:
    network_os: "{{ collection_name }}"
  when: network_os is not defined

- name: Extract DOCUMENTATION from source (for new module)
  set_fact:
    rm_documentation: "{{ lookup('file', '{{ docstring }}') }}"
  when: docstring is defined

- name: Extract EXAMPLES from example file
  set_fact:
    example_documentation: "{{ lookup('file', '{{ examples }}') }}"
  when: examples is defined

- block:

    - name: "Check if {{ network_os }}_{{ resource }} module file exists"
      stat:
        path: "{{ path_to_module }}"
      register: file_stat

    - assert:
        that: file_stat.stat.exists
        success_msg: "{{ network_os }}_{{ resource }} module file exists...attempting to fetch DOCUMENTATION"
        fail_msg: "{{ network_os }}_{{ resource }} module file does not exist and path to docstring not set"
      when: docstring is not defined
    
    - name: Extract DOCUMENTATION from Resource Module (for existing module)
      set_fact:
        rm_documentation: "{{ lookup('file', '{{ path_to_module }}')|ansible_network.cli_rm_builder.get_doc }}"
      when: docstring is not defined
    
    - assert:
        that: rm_documentation != ''
        fail_msg: "{{ network_os }}_{{ resource }} module file has no DOCUMENTATION"

    - name: Extract EXAMPLES from Resource Module (for existing module)
      set_fact:
        example_documentation: "{{ lookup('file', '{{ path_to_module }}')|ansible_network.cli_rm_builder.get_example }}"
      when: examples is not defined and file_stat.stat.exists

  when: docstring is not defined or examples is not defined

- name: "Create the collection directory structure"
  file:
    path: "{{ rm_dest }}/{{ item }}"
    state: directory
  with_items: "{{ directories }}"

- name: Copy the license file to the resource module destination directory
  copy:
    src: "{{ rm['LICENSE'] | default('gpl-3.0.txt') }}"
    dest: "{{ rm_dest }}/LICENSE"
