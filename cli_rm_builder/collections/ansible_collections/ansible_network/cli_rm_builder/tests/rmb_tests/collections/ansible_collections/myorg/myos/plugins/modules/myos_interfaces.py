#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2020 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for myos_interfaces
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

DOCUMENTATION = """
module: myos_interfaces
short_description: 'Manages <xxxx> attributes of <network_os> <resource>.'
description: 'Manages <xxxx> attributes of <network_os> <resource>'
version_added: 1.0.0
author: Ansible Network Engineer
notes:
  - 'Tested against <network_os> <version>'
options:
  config:
    description: The provided configuration
    type: list
    elements: dict
    suboptions:
      name:
        type: str
        description: The name of the <resource>
      some_string:
        type: str
        description:
        - The some_string_01
        choices:
        - choice_a
        - choice_b
        - choice_c
        default: choice_a
      some_bool:
        description:
        - The some_bool.
        type: bool
      some_int:
        description:
        - The some_int.
        type: int
        version_added: '1.1'
      some_dict:
        type: dict
        description:
        - The some_dict.
        suboptions:
          property_01:
            description:
            - The property_01
            type: str
  state:
    description:
    - The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    - gathered
    - rendered
    - parsed
    default: merged


required_if:
- ["state", "merged", ["config",]]
- ["state", "replaced", ["config",]]
- ["state", "overridden", ["config",]]
- ["state", "rendered", ["config",]]
- ["state", "parsed", ["running_config",]]

mutually_exclusive:
 - ["config", "running_config"]

supports_check_mode: True
"""

from ansible.module_utils.basic import AnsibleModule
from ansible_collections.myorg.myos.plugins.module_utils.network.myos.argspec.interfaces.interfaces import (
    InterfacesArgs,
)
from ansible_collections.myorg.myos.plugins.module_utils.network.myos.config.interfaces.interfaces import (
    Interfaces,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(
        argument_spec=InterfacesArgs.argument_spec,
        mutually_exclusive=[['config', 'running_config']],
        required_if=[['state', 'merged', ['config']], ['state', 'replaced', ['config']], ['state', 'overridden', ['config']], ['state', 'rendered', ['config']], ['state', 'parsed', ['running_config']]],
        supports_check_mode=True
    )

    result = Interfaces(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
